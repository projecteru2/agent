// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import coretypes "github.com/projecteru2/core/types"
import mock "github.com/stretchr/testify/mock"

import types "github.com/projecteru2/agent/types"

// Store is an autogenerated mock type for the Store type
type Store struct {
	mock.Mock
}

// DeployContainer provides a mock function with given fields: container, node
func (_m *Store) DeployContainer(container *types.Container, node *coretypes.Node) error {
	ret := _m.Called(container, node)

	var r0 error
	if rf, ok := ret.Get(0).(func(*types.Container, *coretypes.Node) error); ok {
		r0 = rf(container, node)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetNode provides a mock function with given fields: nodename
func (_m *Store) GetNode(nodename string) (*coretypes.Node, error) {
	ret := _m.Called(nodename)

	var r0 *coretypes.Node
	if rf, ok := ret.Get(0).(func(string) *coretypes.Node); ok {
		r0 = rf(nodename)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*coretypes.Node)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(nodename)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateNode provides a mock function with given fields: node
func (_m *Store) UpdateNode(node *coretypes.Node) error {
	ret := _m.Called(node)

	var r0 error
	if rf, ok := ret.Get(0).(func(*coretypes.Node) error); ok {
		r0 = rf(node)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
