// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"

	agenttypes "github.com/projecteru2/agent/types"

	mock "github.com/stretchr/testify/mock"

	types "github.com/projecteru2/core/types"
)

// Store is an autogenerated mock type for the Store type
type Store struct {
	mock.Mock
}

// GetNode provides a mock function with given fields: nodename
func (_m *Store) GetNode(nodename string) (*types.Node, error) {
	ret := _m.Called(nodename)

	var r0 *types.Node
	if rf, ok := ret.Get(0).(func(string) *types.Node); ok {
		r0 = rf(nodename)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.Node)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(nodename)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetContainerStatus provides a mock function with given fields: _a0, _a1, _a2
func (_m *Store) SetContainerStatus(_a0 context.Context, _a1 *agenttypes.Container, _a2 *types.Node) error {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *agenttypes.Container, *types.Node) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateNode provides a mock function with given fields: node
func (_m *Store) UpdateNode(node *types.Node) error {
	ret := _m.Called(node)

	var r0 error
	if rf, ok := ret.Get(0).(func(*types.Node) error); ok {
		r0 = rf(node)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
